#!/bin/sh

sys_init() {

        # time cosumed by initramfs
        printf "Initramfs "
        uptime2

	# set environment vars
	export PATH=/usr/bin:/usr/local/bin

        # disable dmesg logging
        dmesg -n 1

	# load udev
	udevd --daemon
	udevadm trigger

	# allow startx to run with no root
	chmod 666 /dev/fb0
 
        # enable pppd
        mknod /dev/ppp c 108 0

        # enable fuse
	modprobe fuse

        # wait for kvm
	sleep 0.5

        # set screen brightness
        brightness 100

        # udevd time
        printf "Udevd "
        uptime2

	# splash
	echo "+-----------------------------------------------+"
	echo "|           WELCOME TO THE MACHINE              |"
	echo "+-----------------------------------------------+"
	
        # filesystem check
        fsck -ART -y

	# mount filesystems
	mount -a
	mount -t tmpfs tmpfs /tmp
	mkdir /dev/pts
	mount -t devpts devpts /dev/pts
	mkdir /dev/shm
	mount -t tmpfs tmpfs /dev/shm

        # fs
        printf "Filesystem "
        uptime2

        # enable kvm
	chmod 666 /dev/kvm

        # launch X
        chmod 666 /dev/tty7
        su raabdela -c "sleep 1; startx -- vt7" < /dev/null >& /dev/null &

	# set hostname
	hostname `cat /etc/hostname`

	# start dbus
	mkdir -p /run/dbus
	dbus-launch --config-file=/usr/share/dbus-1/system.conf > /dev/null

	# enable firewall
	ufw enable > /dev/null &

	# start network
	wpa_supplicant -Bu -i wlp2s0 > /dev/null
	NetworkManager

        # ssh
	/usr/bin/sshd

	# virtualbox
	vboxreload > /dev/null &

        # total uptime
        printf "Total "
        uptime2

	# done
	echo "-------------------------------------------------"

	# release console
	#exec 0< /dev/null
	#exec 1> /dev/null
	#exec 2> /dev/null

	# launch ttys
	respawn agetty tty1 -J &
        respawn agetty tty2 -J &
        respawn agetty tty3 -J &
        respawn agetty tty4 -J &
        respawn agetty tty5 -J &
        respawn agetty tty6 -J &

}

sys_quit() {

	# restore console
	exec 0< /dev/tty1
	exec 1> /dev/tty1
	exec 2> /dev/tty1
	echo 
	echo System shutdown signal received!

	# make tmpfs
	rm -rf /tmp/initrd
	mkdir -p /tmp/initrd
	mount -t tmpfs tmpfs /tmp/initrd

	# extract initrd
	gzip -dc /boot/initramfs-linux.img > /tmp/initrd.cpio
	cd /tmp/initrd
	cpio -id < ../initrd.cpio
	cp /bin/lastmins  bin/lastmins
	cp /bin/fuser     bin/fuser

	# switch to initramfs
	cd /tmp/initrd
	mkdir old_root
	mount -t devtmpfs devtmpfs dev
	mount -t proc proc proc
	pivot_root . old_root
	exec chroot . bin/lastmins $1 < dev/tty1 > dev/tty1 2&>1

	# failed? not a problem!
	while [ 1 -eq 1 ]; do : ; done

}

# trap signals
trap  'sys_quit b' USR1
trap  'sys_quit o' USR2

# initialize the system
sys_init

# wait infinitely
while /usr/bin/true; do
	sleep 0.5
done

